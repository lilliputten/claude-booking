// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Table {
  id             Int             @id @default(autoincrement())
  tableNumber    Int             @unique
  seats          Int
  status         TableStatus     @default(AVAILABLE)
  reservations   Reservation[]
  walkIns        WalkIn[]
  diningSessions DiningSession[]
}

enum TableStatus {
  AVAILABLE
  OCCUPIED
  RESERVED
}

model Reservation {
  id              Int               @id @default(autoincrement())
  guestName       String
  phone           String?
  partySize       Int
  reservationDate DateTime
  specialRequests String?
  status          ReservationStatus @default(ACTIVE)
  table           Table             @relation(fields: [tableId], references: [id])
  tableId         Int
}

enum ReservationStatus {
  ACTIVE
  CANCELLED
  COMPLETED
}

model WalkIn {
  id           Int       @id @default(autoincrement())
  guestName    String
  phone        String?
  partySize    Int
  seatedAt     Table     @relation(fields: [tableId], references: [id])
  tableId      Int
  checkinTime  DateTime
  checkoutTime DateTime?
}

model DiningSession {
  id        Int       @id @default(autoincrement())
  table     Table     @relation(fields: [tableId], references: [id])
  tableId   Int
  startTime DateTime
  endTime   DateTime?
  partySize Int
}
